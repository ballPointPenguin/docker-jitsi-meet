---
- name: web application deploy
  hosts: west
  remote_user: hank
  vars:
    branch: "daddy"
    domains: "meet.benrosas.com"
    homedir: "/home/{{ user }}"
    org: ballPointPenguin
    repo: docker-jitsi-meet
    user: hank
    workdir: "{{ homedir }}/code/src/github.com/{{ org }}/{{ repo }}"
  vars_files:
    - ./playbook_vars.yml
  tasks:
    - name: ensure workdir parent dir is present
      file:
        path: "{{ homedir }}/code/src/github.com/{{ org }}"
        state: directory

    - name: clone or update repo
      git:
        dest: "{{ workdir }}"
        repo: "https://github.com/{{ org }}/{{ repo }}.git"
        update: yes
        version: "{{ branch }}"

    - name: make config directories
      shell: mkdir -p config/{web/letsencrypt,transcripts,prosody/config,prosody/prosody-plugins-custom,jicofo,jvb,jigasi,jibri}

    - name: create docker network
      docker_network:
        name: meet.jitsi

    - name: run web container
      docker_container:
        image: jitsi/web:latest
        name: jitsi-web
        networks_cli_compatible: yes
        # recreate: yes
        # restart: yes
        restart_policy: unless-stopped
        env:
          LETSENCRYPT_HOST: "{{ domains }}"
          VIRTUAL_HOST: "{{ domains }}"
          ENABLE_LETSENCRYPT: "{{ ENABLE_LETSENCRYPT }}"
          ENABLE_HTTP_REDIRECT: "{{ ENABLE_HTTP_REDIRECT }}"
          # ENABLE_XMPP_WEBSOCKET: "{{ ENABLE_XMPP_WEBSOCKET }}"
          DISABLE_HTTPS: "{{ DISABLE_HTTPS }}"
          LETSENCRYPT_DOMAIN: "{{ LETSENCRYPT_DOMAIN }}"
          LETSENCRYPT_EMAIL: "{{ LETSENCRYPT_EMAIL }}"
          PUBLIC_URL: "{{ PUBLIC_URL }}"
          TZ: "{{ TZ }}"
          # AMPLITUDE_ID: "{{ AMPLITUDE_ID }}"
          # ANALYTICS_SCRIPT_URLS: "{{ ANALYTICS_SCRIPT_URLS }}"
          # ANALYTICS_WHITELISTED_EVENTS: "{{ ANALYTICS_WHITELISTED_EVENTS }}"
          # BRIDGE_CHANNEL: "{{ BRIDGE_CHANNEL }}"
          # BRANDING_DATA_URL: "{{ BRANDING_DATA_URL }}"
          # CALLSTATS_CUSTOM_SCRIPT_URL: "{{ CALLSTATS_CUSTOM_SCRIPT_URL }}"
          # CALLSTATS_ID: "{{ CALLSTATS_ID }}"
          # CALLSTATS_SECRET: "{{ CALLSTATS_SECRET }}"
          # CHROME_EXTENSION_BANNER_JSON: "{{ CHROME_EXTENSION_BANNER_JSON }}"
          # CONFCODE_URL: "{{ CONFCODE_URL }}"
          # CONFIG_EXTERNAL_CONNECT: "{{ CONFIG_EXTERNAL_CONNECT }}"
          # DEPLOYMENTINFO_ENVIRONMENT: "{{ DEPLOYMENTINFO_ENVIRONMENT }}"
          # DEPLOYMENTINFO_ENVIRONMENT_TYPE: "{{ DEPLOYMENTINFO_ENVIRONMENT_TYPE }}"
          # DEPLOYMENTINFO_USERREGION: "{{ DEPLOYMENTINFO_USERREGION }}"
          # DIALIN_NUMBERS_URL: "{{ DIALIN_NUMBERS_URL }}"
          # DIALOUT_AUTH_URL: "{{ DIALOUT_AUTH_URL }}"
          # DIALOUT_CODES_URL: "{{ DIALOUT_CODES_URL }}"
          # DROPBOX_APPKEY: "{{ DROPBOX_APPKEY }}"
          # DROPBOX_REDIRECT_URI: "{{ DROPBOX_REDIRECT_URI }}"
          # ENABLE_AUDIO_PROCESSING: "{{ ENABLE_AUDIO_PROCESSING }}"
          ENABLE_AUTH: "{{ ENABLE_AUTH }}"
          # ENABLE_CALENDAR: "{{ ENABLE_CALENDAR }}"
          # ENABLE_FILE_RECORDING_SERVICE: "{{ ENABLE_FILE_RECORDING_SERVICE }}"
          # ENABLE_FILE_RECORDING_SERVICE_SHARING: "{{ ENABLE_FILE_RECORDING_SERVICE_SHARING }}"
          ENABLE_GUESTS: "{{ ENABLE_GUESTS }}"
          # ENABLE_IPV6: "{{ ENABLE_IPV6 }}"
          # ENABLE_LIPSYNC: "{{ ENABLE_LIPSYNC }}"
          # ENABLE_NO_AUDIO_DETECTION: "{{ ENABLE_NO_AUDIO_DETECTION }}"
          # ENABLE_P2P: "{{ ENABLE_P2P }}"
          # ENABLE_PREJOIN_PAGE: "{{ ENABLE_PREJOIN_PAGE }}"
          ENABLE_RECORDING: "{{ ENABLE_RECORDING }}"
          # ENABLE_REMB: "{{ ENABLE_REMB }}"
          # ENABLE_REQUIRE_DISPLAY_NAME: "{{ ENABLE_REQUIRE_DISPLAY_NAME }}"
          # ENABLE_SIMULCAST: "{{ ENABLE_SIMULCAST }}"
          # ENABLE_STATS_ID: "{{ ENABLE_STATS_ID }}"
          # ENABLE_STEREO: "{{ ENABLE_STEREO }}"
          # ENABLE_SUBDOMAINS: "{{ ENABLE_SUBDOMAINS }}"
          # ENABLE_TALK_WHILE_MUTED: "{{ ENABLE_TALK_WHILE_MUTED }}"
          # ENABLE_TCC: "{{ ENABLE_TCC }}"
          ENABLE_TRANSCRIPTIONS: "{{ ENABLE_TRANSCRIPTIONS }}"
          ETHERPAD_PUBLIC_URL: "{{ ETHERPAD_PUBLIC_URL }}"
          ETHERPAD_URL_BASE: "{{ ETHERPAD_URL_BASE }}"
          # GOOGLE_ANALYTICS_ID: "{{ GOOGLE_ANALYTICS_ID }}"
          # GOOGLE_API_APP_CLIENT_ID: "{{ GOOGLE_API_APP_CLIENT_ID }}"
          # INVITE_SERVICE_URL: "{{ INVITE_SERVICE_URL }}"
          JICOFO_AUTH_USER: "{{ JICOFO_AUTH_USER }}"
          # MATOMO_ENDPOINT: "{{ MATOMO_ENDPOINT }}"
          # MATOMO_SITE_ID: "{{ MATOMO_SITE_ID }}"
          # MICROSOFT_API_APP_CLIENT_ID: "{{ MICROSOFT_API_APP_CLIENT_ID }}"
          # NGINX_RESOLVER: "{{ NGINX_RESOLVER }}"
          # PEOPLE_SEARCH_URL: "{{ PEOPLE_SEARCH_URL }}"
          # RESOLUTION: "{{ RESOLUTION }}"
          # RESOLUTION_MIN: "{{ RESOLUTION_MIN }}"
          # RESOLUTION_WIDTH: "{{ RESOLUTION_WIDTH }}"
          # RESOLUTION_WIDTH_MIN: "{{ RESOLUTION_WIDTH_MIN }}"
          # START_AUDIO_ONLY: "{{ START_AUDIO_ONLY }}"
          # START_AUDIO_MUTED: "{{ START_AUDIO_MUTED }}"
          # START_BITRATE: "{{ START_BITRATE }}"
          # START_VIDEO_MUTED: "{{ START_VIDEO_MUTED }}"
          # TESTING_CAP_SCREENSHARE_BITRATE: "{{ TESTING_CAP_SCREENSHARE_BITRATE }}"
          # TESTING_OCTO_PROBABILITY: "{{ TESTING_OCTO_PROBABILITY }}"
          XMPP_AUTH_DOMAIN: "{{ XMPP_AUTH_DOMAIN }}"
          XMPP_BOSH_URL_BASE: "{{ XMPP_BOSH_URL_BASE }}"
          XMPP_DOMAIN: "{{ XMPP_DOMAIN }}"
          XMPP_GUEST_DOMAIN: "{{ XMPP_GUEST_DOMAIN }}"
          XMPP_MUC_DOMAIN: "{{ XMPP_MUC_DOMAIN }}"
          XMPP_RECORDER_DOMAIN: "{{ XMPP_RECORDER_DOMAIN }}"
        exposed_ports:
          - 80
          - 443
        volumes:
          - "{{ workdir }}/config/web:/config:Z"
          - "{{ workdir }}/config/web/letsencrypt:/etc/letsencrypt:Z"
          - "{{ workdir }}/config/transcripts:/usr/share/jitsi-meet/transcripts:Z"
        networks:
          - name: meet.jitsi
            aliases:
              - "{{ XMPP_DOMAIN }}"
          - name: bridge

    - name: run xmpp container
      docker_container:
        image: jitsi/prosody:latest
        name: jitsi-prosody
        networks_cli_compatible: yes
        # recreate: yes
        # restart: yes
        restart_policy: unless-stopped
        env:
          AUTH_TYPE: "{{ AUTH_TYPE }}"
          ENABLE_AUTH: "{{ ENABLE_AUTH }}"
          ENABLE_GUESTS: "{{ ENABLE_GUESTS }}"
          ENABLE_LOBBY: "{{ ENABLE_LOBBY }}"
          # ENABLE_XMPP_WEBSOCKET: "{{ ENABLE_XMPP_WEBSOCKET }}"
          # GLOBAL_MODULES: "{{ GLOBAL_MODULES }}"
          # GLOBAL_CONFIG: "{{ GLOBAL_CONFIG }}"
          # LDAP_URL: "{{ LDAP_URL }}"
          # LDAP_BASE: "{{ LDAP_BASE }}"
          # LDAP_BINDDN: "{{ LDAP_BINDDN }}"
          # LDAP_BINDPW: "{{ LDAP_BINDPW }}"
          # LDAP_FILTER: "{{ LDAP_FILTER }}"
          # LDAP_AUTH_METHOD: "{{ LDAP_AUTH_METHOD }}"
          # LDAP_VERSION: "{{ LDAP_VERSION }}"
          # LDAP_USE_TLS: "{{ LDAP_USE_TLS }}"
          # LDAP_TLS_CIPHERS: "{{ LDAP_TLS_CIPHERS }}"
          # LDAP_TLS_CHECK_PEER: "{{ LDAP_TLS_CHECK_PEER }}"
          # LDAP_TLS_CACERT_FILE: "{{ LDAP_TLS_CACERT_FILE }}"
          # LDAP_TLS_CACERT_DIR: "{{ LDAP_TLS_CACERT_DIR }}"
          # LDAP_START_TLS: "{{ LDAP_START_TLS }}"
          XMPP_DOMAIN: "{{ XMPP_DOMAIN }}"
          XMPP_AUTH_DOMAIN: "{{ XMPP_AUTH_DOMAIN }}"
          XMPP_GUEST_DOMAIN: "{{ XMPP_GUEST_DOMAIN }}"
          XMPP_MUC_DOMAIN: "{{ XMPP_MUC_DOMAIN }}"
          XMPP_INTERNAL_MUC_DOMAIN: "{{ XMPP_INTERNAL_MUC_DOMAIN }}"
          # XMPP_MODULES: "{{ XMPP_MODULES }}"
          # XMPP_MUC_MODULES: "{{ XMPP_MUC_MODULES }}"
          # XMPP_INTERNAL_MUC_MODULES: "{{ XMPP_INTERNAL_MUC_MODULES }}"
          XMPP_RECORDER_DOMAIN: "{{ XMPP_RECORDER_DOMAIN }}"
          JICOFO_COMPONENT_SECRET: "{{ JICOFO_COMPONENT_SECRET }}"
          JICOFO_AUTH_USER: "{{ JICOFO_AUTH_USER }}"
          JICOFO_AUTH_PASSWORD: "{{ JICOFO_AUTH_PASSWORD }}"
          JVB_AUTH_USER: "{{ JVB_AUTH_USER }}"
          JVB_AUTH_PASSWORD: "{{ JVB_AUTH_PASSWORD }}"
          JIGASI_XMPP_USER: "{{ JIGASI_XMPP_USER }}"
          JIGASI_XMPP_PASSWORD: "{{ JIGASI_XMPP_PASSWORD }}"
          JIBRI_XMPP_USER: "{{ JIBRI_XMPP_USER }}"
          JIBRI_XMPP_PASSWORD: "{{ JIBRI_XMPP_PASSWORD }}"
          JIBRI_RECORDER_USER: "{{ JIBRI_RECORDER_USER }}"
          JIBRI_RECORDER_PASSWORD: "{{ JIBRI_RECORDER_PASSWORD }}"
          # JWT_APP_ID: "{{ JWT_APP_ID }}"
          # JWT_APP_SECRET: "{{ JWT_APP_SECRET }}"
          # JWT_ACCEPTED_ISSUERS: "{{ JWT_ACCEPTED_ISSUERS }}"
          # JWT_ACCEPTED_AUDIENCES: "{{ JWT_ACCEPTED_AUDIENCES }}"
          # JWT_ASAP_KEYSERVER: "{{ JWT_ASAP_KEYSERVER }}"
          # JWT_ALLOW_EMPTY: "{{ JWT_ALLOW_EMPTY }}"
          # JWT_AUTH_TYPE: "{{ JWT_AUTH_TYPE }}"
          # JWT_TOKEN_AUTH_MODULE: "{{ JWT_TOKEN_AUTH_MODULE }}"
          # LOG_LEVEL: "{{ LOG_LEVEL }}"
          PUBLIC_URL: "{{ PUBLIC_URL }}"
          TZ: "{{ TZ }}"
        exposed_ports:
          - "5222"
          - "5347"
          - "5280"
        volumes:
          - "{{ workdir }}/config/prosody/config:/config:Z"
          - "{{ workdir }}/config/prosody/prosody-plugins-custom:/prosody-plugins-custom:Z"
        networks:
          - name: meet.jitsi
            aliases:
              - "{{ XMPP_SERVER }}"

    - name: run focus container
      docker_container:
        image: jitsi/jicofo:latest
        name: jitsi-jicofo
        networks_cli_compatible: yes
        # recreate: yes
        # restart: yes
        restart_policy: unless-stopped
        env:
          AUTH_TYPE: "{{ AUTH_TYPE }}"
          ENABLE_AUTH: "{{ ENABLE_AUTH }}"
          XMPP_DOMAIN: "{{ XMPP_DOMAIN }}"
          XMPP_AUTH_DOMAIN: "{{ XMPP_AUTH_DOMAIN }}"
          XMPP_INTERNAL_MUC_DOMAIN: "{{ XMPP_INTERNAL_MUC_DOMAIN }}"
          XMPP_MUC_DOMAIN: "{{ XMPP_MUC_DOMAIN }}"
          XMPP_SERVER: "{{ XMPP_SERVER }}"
          JICOFO_COMPONENT_SECRET: "{{ JICOFO_COMPONENT_SECRET }}"
          JICOFO_AUTH_USER: "{{ JICOFO_AUTH_USER }}"
          JICOFO_AUTH_PASSWORD: "{{ JICOFO_AUTH_PASSWORD }}"
          # JICOFO_RESERVATION_REST_BASE_URL: "{{ JICOFO_RESERVATION_REST_BASE_URL }}"
          JVB_BREWERY_MUC: "{{ JVB_BREWERY_MUC }}"
          JIGASI_BREWERY_MUC: "{{ JIGASI_BREWERY_MUC }}"
          # JIGASI_SIP_URI: "{{ JIGASI_SIP_URI }}"
          JIBRI_BREWERY_MUC: "{{ JIBRI_BREWERY_MUC }}"
          JIBRI_PENDING_TIMEOUT: "{{ JIBRI_PENDING_TIMEOUT }}"
          TZ: "{{ TZ }}"
        links:
          - jitsi-prosody:prosody
        networks:
          - name: meet.jitsi
        volumes:
          - "{{ workdir }}/config/jicofo:/config:Z"

    - name: run video bridge container
      docker_container:
        image: jitsi/jvb:latest
        name: jitsi-jvb
        networks_cli_compatible: yes
        # recreate: yes
        # restart: yes
        restart_policy: unless-stopped
        env:
          DOCKER_HOST_ADDRESS: "{{ DOCKER_HOST_ADDRESS }}"
          XMPP_AUTH_DOMAIN: "{{ XMPP_AUTH_DOMAIN }}"
          XMPP_INTERNAL_MUC_DOMAIN: "{{ XMPP_INTERNAL_MUC_DOMAIN }}"
          XMPP_SERVER: "{{ XMPP_SERVER }}"
          JVB_AUTH_USER: "{{ JVB_AUTH_USER }}"
          JVB_AUTH_PASSWORD: "{{ JVB_AUTH_PASSWORD }}"
          JVB_BREWERY_MUC: "{{ JVB_BREWERY_MUC }}"
          JVB_PORT: "{{ JVB_PORT }}"
          JVB_TCP_HARVESTER_DISABLED: "{{ JVB_TCP_HARVESTER_DISABLED }}"
          JVB_TCP_PORT: "{{ JVB_TCP_PORT }}"
          JVB_TCP_MAPPED_PORT: "{{ JVB_TCP_MAPPED_PORT }}"
          JVB_STUN_SERVERS: "{{ JVB_STUN_SERVERS }}"
          # JVB_ENABLE_APIS: "{{ JVB_ENABLE_APIS }}"
          # JVB_WS_DOMAIN: "{{ JVB_WS_DOMAIN }}"
          # JVB_WS_SERVER_ID: "{{ JVB_WS_SERVER_ID }}"
          PUBLIC_URL: "{{ PUBLIC_URL }}"
          TZ: "{{ TZ }}"
        links:
          - jitsi-prosody:prosody
        networks:
          - name: meet.jitsi
            aliases:
              - jvb.meet.jitsi
        published_ports:
          - "{{ JVB_PORT }}:{{ JVB_PORT }}/udp"
          - "{{ JVB_TCP_PORT }}:{{ JVB_TCP_PORT }}"

    - name: run etherpad container
      docker_container:
        image: jitsi/etherpad:latest
        name: jitsi-etherpad
        networks_cli_compatible: yes
        restart_policy: unless-stopped
        networks:
          - name: meet.jitsi
            aliases:
              - etherpad.meet.jitsi

    - name: list users
      shell: docker exec jitsi-prosody find /config/data/meet%2ejitsi/accounts -type f -exec \
        basename {} .dat \;
      ignore_errors: yes
      register: jitsi_users

    - name: register admin user
      shell: echo {{ ADMIN_USERNAME }}
      register: admin_username

    - name: debug jitsi_users
      debug:
        var: jitsi_users

    - name: create admin user
      shell: "docker exec jitsi-prosody prosodyctl --config /config/prosody.cfg.lua register \
        {{ ADMIN_USERNAME }} meet.jitsi {{ ADMIN_PASSWORD }}"
      when: jitsi_users.stdout.find(admin_username.stdout) != -1
